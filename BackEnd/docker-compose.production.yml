version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: gemnet-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: gemnet_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - gemnet-network

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: gemnet-backend
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=gemnet_db
      - SPRING_DATA_MONGODB_USERNAME=admin
      - SPRING_DATA_MONGODB_PASSWORD=password
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - JWT_SECRET=mySecretKeyForGemNetApplicationThatShouldBeAtLeast256BitsLong
      - APP_BASE_URL=http://localhost:9092
    ports:
      - "9092:9092"
    volumes:
      - backend_uploads:/app/uploads
      - ./haarcascade_frontalface_alt.xml:/app/haarcascade_frontalface_alt.xml
    networks:
      - gemnet-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9092/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongodb_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  gemnet-network:
    driver: bridge