version: '3.8'

services:
  # GemNet Backend Application
  gemnet-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gemnet-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=gemnet_db
      - APP_JWT_SECRET=${JWT_SECRET:-mySecretKeyForGemNetApplicationThatShouldBeAtLeast256BitsLong}
      - APP_FILE_STORAGE_BASE_PATH=/app/uploads
      - JAVA_OPTS=-Xms512m -Xmx1024m
    volumes:
      - uploads-data:/app/uploads
      - ./tessdata:/app/tessdata:ro
    depends_on:
      - mongodb
    networks:
      - gemnet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB Database
  mongodb:
    image: mongo:4.4
    container_name: gemnet-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=gemnet_db
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - gemnet-network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/gemnet_db --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:latest
    container_name: gemnet-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - gemnet-network
    restart: unless-stopped
    profiles:
      - dev

volumes:
  mongo-data:
    driver: local
  uploads-data:
    driver: local

networks:
  gemnet-network:
    driver: bridge
